{"version":3,"sources":["webpack:///./app/components/Table.js"],"names":["Placeholder","columns","rows","Array","fill","map","_","row","Row","key","col","Cell","minWidth","maxWidth","Anchor","styled","div","Pagination","Flex","DescSortIcon","CollapsedIcon","props","theme","text","AscSortIcon","InnerTable","table","SortWrapper","td","divider","tr","Head","th","background","backgroundTransition","textSecondary","observer","Table","data","isLoading","offset","totalPages","empty","page","pageSize","defaultSort","topRef","onChangeSort","onChangePage","t","useTranslation","useTable","manualPagination","manualSortBy","autoResetSortBy","autoResetPage","pageCount","initialState","sortBy","id","desc","pageIndex","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","canNextPage","nextPage","canPreviousPage","previousPage","state","React","length","undefined","isEmpty","showPlaceholder","console","log","ref","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","align","gap","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","className","justify","onClick","neutral"],"mappings":"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","file":"table.93ee769dc8ed1cfb4dfe.js","sourcesContent":["// @flow\nimport { observer } from \"mobx-react\";\nimport { CollapsedIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\nimport styled from \"styled-components\";\nimport Button from \"components/Button\";\nimport Empty from \"components/Empty\";\nimport Flex from \"components/Flex\";\nimport PlaceholderText from \"components/PlaceholderText\";\n\nexport type Props = {|\n  data: any[],\n  offset?: number,\n  isLoading: boolean,\n  empty?: React.Node,\n  currentPage?: number,\n  page: number,\n  pageSize?: number,\n  totalPages?: number,\n  defaultSort?: string,\n  topRef?: React.Ref<any>,\n  onChangePage: (index: number) => void,\n  onChangeSort: (sort: ?string, direction: \"ASC\" | \"DESC\") => void,\n  columns: any,\n|};\n\nfunction Table({\n  data,\n  offset,\n  isLoading,\n  totalPages,\n  empty,\n  columns,\n  page,\n  pageSize = 50,\n  defaultSort = \"name\",\n  topRef,\n  onChangeSort,\n  onChangePage,\n}: Props) {\n  const { t } = useTranslation();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canNextPage,\n    nextPage,\n    canPreviousPage,\n    previousPage,\n    state: { pageIndex, sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n      manualPagination: true,\n      manualSortBy: true,\n      autoResetSortBy: false,\n      autoResetPage: false,\n      pageCount: totalPages,\n      initialState: {\n        sortBy: [{ id: defaultSort, desc: false }],\n        pageSize,\n        pageIndex: page,\n      },\n    },\n    useSortBy,\n    usePagination\n  );\n\n  React.useEffect(() => {\n    onChangePage(pageIndex);\n  }, [pageIndex]);\n\n  React.useEffect(() => {\n    onChangePage(0);\n    onChangeSort(\n      sortBy.length ? sortBy[0].id : undefined,\n      sortBy.length && sortBy[0].desc ? \"DESC\" : \"ASC\"\n    );\n  }, [sortBy]);\n\n  const isEmpty = !isLoading && data.length === 0;\n  const showPlaceholder = isLoading && data.length === 0;\n\n  console.log({ canNextPage, pageIndex, totalPages, rows, data });\n\n  return (\n    <>\n      <Anchor ref={topRef} />\n      <InnerTable {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <Head {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  <SortWrapper align=\"center\" gap={4}>\n                    {column.render(\"Header\")}\n                    {column.isSorted &&\n                      (column.isSortedDesc ? (\n                        <DescSortIcon />\n                      ) : (\n                        <AscSortIcon />\n                      ))}\n                  </SortWrapper>\n                </Head>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <Row {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <Cell\n                    {...cell.getCellProps([\n                      {\n                        className: cell.column.className,\n                      },\n                    ])}\n                  >\n                    {cell.render(\"Cell\")}\n                  </Cell>\n                ))}\n              </Row>\n            );\n          })}\n        </tbody>\n        {showPlaceholder && <Placeholder columns={columns.length} />}\n      </InnerTable>\n      {isEmpty ? (\n        empty || <Empty>{t(\"No results\")}</Empty>\n      ) : (\n        <Pagination\n          justify={canPreviousPage ? \"space-between\" : \"flex-end\"}\n          gap={8}\n        >\n          {/* Note: the page > 0 check shouldn't be needed here but is */}\n          {canPreviousPage && page > 0 && (\n            <Button onClick={previousPage} neutral>\n              {t(\"Previous page\")}\n            </Button>\n          )}\n          {canNextPage && (\n            <Button onClick={nextPage} neutral>\n              {t(\"Next page\")}\n            </Button>\n          )}\n        </Pagination>\n      )}\n    </>\n  );\n}\n\nexport const Placeholder = ({\n  columns,\n  rows = 3,\n}: {\n  columns: number,\n  rows?: number,\n}) => {\n  return (\n    <tbody>\n      {new Array(rows).fill().map((_, row) => (\n        <Row key={row}>\n          {new Array(columns).fill().map((_, col) => (\n            <Cell key={col}>\n              <PlaceholderText minWidth={25} maxWidth={75} />\n            </Cell>\n          ))}\n        </Row>\n      ))}\n    </tbody>\n  );\n};\n\nconst Anchor = styled.div`\n  top: -32px;\n  position: relative;\n`;\n\nconst Pagination = styled(Flex)`\n  margin: 0 0 32px;\n`;\n\nconst DescSortIcon = styled(CollapsedIcon)`\n  &:hover {\n    fill: ${(props) => props.theme.text};\n  }\n`;\n\nconst AscSortIcon = styled(DescSortIcon)`\n  transform: rotate(180deg);\n`;\n\nconst InnerTable = styled.table`\n  border-collapse: collapse;\n  margin: 16px 0;\n  width: 100%;\n`;\n\nconst SortWrapper = styled(Flex)`\n  height: 24px;\n`;\n\nconst Cell = styled.td`\n  padding: 8px 0;\n  border-bottom: 1px solid ${(props) => props.theme.divider};\n  font-size: 14px;\n\n  &:first-child {\n    font-size: 15px;\n    font-weight: 500;\n  }\n\n  &.actions,\n  &.right-aligned {\n    text-align: right;\n    vertical-align: bottom;\n  }\n`;\n\nconst Row = styled.tr`\n  &:last-child {\n    ${Cell} {\n      border-bottom: 0;\n    }\n  }\n`;\n\nconst Head = styled.th`\n  text-align: left;\n  position: sticky;\n  top: 54px;\n  padding: 6px 0;\n  border-bottom: 1px solid ${(props) => props.theme.divider};\n  background: ${(props) => props.theme.background};\n  transition: ${(props) => props.theme.backgroundTransition};\n  font-size: 14px;\n  color: ${(props) => props.theme.textSecondary};\n  font-weight: 500;\n  z-index: 1;\n`;\n\nexport default observer(Table);\n"],"sourceRoot":""}